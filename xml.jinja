{%- macro insert_spaces(num=0) -%}
  {%- for space in range(1,num) if num != 0 -%}
  {{ ' ' }}
  {%- endfor -%}
{%- endmacro -%}

{%- macro line_block(key, value='', params={}, spaces=0) %}
{{ insert_spaces(spaces) }}<{{ key }}{{ params|xmlattr }}>{{ value }}</{{ key }}>
{%- endmacro -%}

{%- macro dict_block(key, value, params={}, spaces=0, tabspaces=4) -%}
  {%- for k,v in value.items() if k is match('^\@.*') -%}
    {%- do params.update({k| trim('@'):v})  -%}
  {%- endfor %}
{{ insert_spaces(spaces) }}<{{ key }}{{ params|xmlattr }}>
  {%- for k,v in value.items() if k is not match('^\@.*') -%}
{{ insert_spaces(spaces) }}{{ block(key=k, value=v, spaces=spaces+tabspaces) }}
  {%- endfor %}
{{ insert_spaces(spaces) }}</{{ key }}>
{%- endmacro -%}

{%- macro seq_block(key, value, params={}, spaces=0, tabspaces=4) -%}
  {%- for item in value -%}
    {%- if item is mapping -%}
      {%- for k,v in item.items() if k is match('^\@.*') -%}
        {%- do params.update({k| trim('@'):v})  -%}
      {%- endfor -%}
    {%- elif item is string or item is number -%}
      {{ block(key=key, value=item, params=params, spaces=spaces, tabspaces=tabspaces) }}
    {%- elif item is sequence -%}
      {%- set sub_dict = {} -%}
      {%- for  sub_item in item -%}
        {%- do sub_dict.update(sub_item) -%}
      {%- endfor -%}
      {{ block(key=key, value=sub_dict, params=params, spaces=spaces, tabspaces=tabspaces) }}
    {%- endif -%}
  {%- endfor -%}
{%- endmacro -%}

{%- macro block(key, value, params={}, spaces=0, tabspaces=4) -%}
  {%- if value is mapping -%}
      {{ dict_block(key=key, value=value, params=params, spaces=spaces, tabspaces=tabspaces) }}
  {%- elif value is string or value is number -%}
      {{ line_block(key=key, value=value, params=params, spaces=spaces) }}
  {%- elif value is sequence -%}
      {{ seq_block(key=key, value=value, params=params, spaces=spaces, tabspaces=tabspaces) }}
  {%- endif -%}
{%- endmacro -%}
